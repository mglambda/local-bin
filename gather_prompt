#!/usr/bin/env python
import sys


def replace_some(extension):
    replacements = {"py": "python",
                    "js":"javascript"}
    return replacements.get(extension, extension)

    
def print_file_contents(file_path, replace=True):
    try:
        if replace:
            with open(file_path, 'r') as file:
                contents = file.read()
        filename = file_path.split('/')[-1]
        extension = filename.split('.')[-1]
        if extension == filename:
            extension = ""

                
        # Print the header
        print(f"## {filename}")
        print(f"\n```{replace_some(extension)}")

        if replace:
            # Print the actual content of the file
            print(contents)
        else:
            print("{[" + file_path + "]}")
        print("```\n")
    except FileNotFoundError:
        print(f"File not found: {file_path}", file=sys.stderr)
    except Exception as e:
        print(f"An error occurred while reading {file_path}: {e}", file=sys.stderr)

def main():
    if len(sys.argv) < 2:
        print("Gather and quote files for use in LLM prompts.\nUsage: python script.py [-r] file1 file2 ...\n Use -r to do full text replacement. The default is to use dynamic fiel vars e.g. {[file1.txt]}")
        return

    replace = False
    if sys.argv[1] == "-r":
        replace = True
        del sys.argv[1]
        
    for arg in sys.argv[1:]:
        print_file_contents(arg, replace=replace)

if __name__ == "__main__":
    main()
